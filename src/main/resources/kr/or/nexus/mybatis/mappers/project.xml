<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.nexus.group.project.dao.ProjectMapper">

	<resultMap type="GroupMemberVO" id="groupMap" autoMapping="true">
		<id property="groupId" column="GROUP_ID"/>
		<id property="memberId" column="MEMBER_ID"/>
		<association property="member" javaType="MemberManagementVO" autoMapping="true" />
	</resultMap>

	<resultMap type="ProjectVO" id="projectMap" autoMapping="true">
		<id property="projectId" column="PROJECT_ID"/>
		<collection property="projectRole" ofType="ProjectRoleVO" autoMapping="true">
			<id property="projectRoleIdx" column="PROJECT_ROLE_IDX"/>
			<collection property="projectMember" ofType="ProjectMemberVO" autoMapping="true">
				<id property="projectMemIdx" column="PROJECT_MEM_IDX"/>
				<association property="groupMember" javaType="GroupMemberVO" autoMapping="true">
					<id property="groupId" column="GROUP_ID"/>
					<id property="memberId" column="MEMBER_ID"/>
					<association property="member" javaType="MemberManagementVO" autoMapping="true">
						<id property="memberId" column="MEMBER_ID"/>
					</association>
				</association>
			</collection>
		</collection>
		<collection property="issueList" ofType="IssueVO" autoMapping="true" />
	</resultMap>
	
	<resultMap type="ProjectVO" id="projectMap5" autoMapping="true">
		<id property="projectId" column="PROJECT_ID"/>
		<collection property="projectRole" ofType="ProjectRoleVO" autoMapping="true">
			<id property="projectRoleIdx" column="PROJECT_ROLE_IDX"/>
			<collection property="projectMember" ofType="ProjectMemberVO" autoMapping="true">
				<id property="projectMemIdx" column="PROJECT_MEM_IDX"/>
				<association property="member" javaType="MemberManagementVO" autoMapping="true" />
			</collection>
		</collection>
		<collection property="issueList" ofType="IssueVO" autoMapping="true" />
	</resultMap>

	<select id="selectGroupMemberList" parameterType="GroupMemberVO" resultMap="groupMap">
		SELECT *
		FROM GROUP_MEMBER
		INNER JOIN MEMBER_MANAGEMENT ON (MEMBER_MANAGEMENT.MEMBER_ID = GROUP_MEMBER.MEMBER_ID)
		WHERE GROUP_ID = #{groupId} AND GROUP_DELYN = 'N'
		ORDER BY MEMBER_MANAGEMENT.MEMBER_ID ASC
	</select>

	<select id="selectGroupProjectList" resultMap="projectMap" parameterType="string">
		SELECT PROJECT.*, PROJECT_ROLE.*, PROJECT_MEMBER.*, MEMBER_MANAGEMENT.*, ISSUE.*, TO_CHAR(PROJECT.PROJECT_BUDGET, 'FM999,999,999,999') AS BUDGET
		FROM PROJECT
		INNER JOIN PROJECT_ROLE ON (PROJECT.PROJECT_ID = PROJECT_ROLE.PROJECT_ID)
		LEFT OUTER JOIN PROJECT_MEMBER ON (PROJECT_MEMBER.PROJECT_ROLE_IDX = PROJECT_ROLE.PROJECT_ROLE_IDX AND PROJECT_MEMBER.PROJECT_ID = PROJECT.PROJECT_ID AND PROJECT.GROUP_ID = PROJECT_MEMBER.GROUP_ID)
		LEFT OUTER JOIN MEMBER_MANAGEMENT ON (MEMBER_MANAGEMENT.MEMBER_ID = PROJECT_MEMBER.MEMBER_ID)
		LEFT OUTER JOIN ISSUE ON (ISSUE.PROJECT_ID = PROJECT.PROJECT_ID AND ISSUE.PROJECT_MEM_IDX = PROJECT_MEMBER.PROJECT_MEM_IDX)
		WHERE PROJECT.GROUP_ID = #{groupId}
		ORDER BY PROJECT.PROJECT_ID ASC
	</select>
	
	<select id="selectGroupProjectSearchList" resultMap="projectMap" parameterType="map">
		SELECT PROJECT.*, PROJECT_ROLE.*, PROJECT_MEMBER.*, MEMBER_MANAGEMENT.*, ISSUE.*, TO_CHAR(PROJECT.PROJECT_BUDGET, 'FM999,999,999,999') AS BUDGET
		FROM PROJECT
		INNER JOIN PROJECT_ROLE ON (PROJECT.PROJECT_ID = PROJECT_ROLE.PROJECT_ID)
		LEFT OUTER JOIN PROJECT_MEMBER ON (PROJECT_MEMBER.PROJECT_ROLE_IDX = PROJECT_ROLE.PROJECT_ROLE_IDX AND PROJECT_MEMBER.PROJECT_ID = PROJECT.PROJECT_ID AND PROJECT.GROUP_ID = PROJECT_MEMBER.GROUP_ID)
		LEFT OUTER JOIN MEMBER_MANAGEMENT ON (MEMBER_MANAGEMENT.MEMBER_ID = PROJECT_MEMBER.MEMBER_ID)
		LEFT OUTER JOIN ISSUE ON (ISSUE.PROJECT_ID = PROJECT.PROJECT_ID AND ISSUE.PROJECT_MEM_IDX = PROJECT_MEMBER.PROJECT_MEM_IDX)
		WHERE PROJECT.GROUP_ID = #{groupId} AND PROJECT.PROJECT_NAME LIKE '%' || #{search} || '%'
		ORDER BY PROJECT.PROJECT_ID ASC
	</select>
	
	<select id="selectProjectList" resultType="ProjectVO" parameterType="string">
		SELECT *
		FROM PROJECT
		WHERE GROUP_ID = #{groupId}
		ORDER BY PROJECT_ID ASC
	</select>

	<insert id="insertProjectForm" parameterType="ProjectVO">
		<selectKey order="BEFORE" resultType="string"
			keyProperty="projectId">
			SELECT 'PRJ' || LPAD(TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(PROJECT_ID, 4))), 0 ) + 1 ),3,'0')
			FROM PROJECT
		</selectKey>
		INSERT INTO PROJECT(
		PROJECT_ID
		,GROUP_ID
		)
		VALUES(
		#{projectId}
		,#{groupId}
		)
	</insert>

	<insert id="insertProjectFormRole" parameterType="ProjectVO">
		<selectKey order="BEFORE" resultType="string" keyProperty="projectId">
	        SELECT 'PRJ' || LPAD(TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(PROJECT_ID, 4))), 0)), 3, '0')
	        FROM PROJECT
	    </selectKey>
	    INSERT INTO PROJECT_ROLE(
		PROJECT_ROLE_IDX
		,PROJECT_ID
		,PROJECT_ROLE_NAME
		)
		VALUES(
		(SELECT #{projectId} || '_' || LPAD(TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(PROJECT_ROLE_IDX,8))),0)+1),3,'0')
		FROM PROJECT_ROLE
		WHERE PROJECT_ID = #{projectId}
		)
		,#{projectId}
		,'프로젝트 리더'
		)
	</insert>

	<select id="selectProjectId" resultType="ProjectVO">
		SELECT 'PRJ' || LPAD(TO_CHAR(MAX(TO_NUMBER(SUBSTR(PROJECT_ID,4)))),3,'0') AS PROJECT_ID
		FROM PROJECT
	</select>


	<select id="selectProject" resultType="ProjectVO" parameterType="string">
		SELECT *
		FROM PROJECT
		WHERE PROJECT_ID = #{projectId}
	</select>

	<resultMap type="ProjectMemberVO" id="pmMap" autoMapping="true">
		<id property="projectMemIdx" column="PROJECT_MEM_IDX"/>
		<association property="groupMember" javaType="GroupMemberVO" autoMapping="true">
			<id property="groupId" column="GROUP_ID"/>
			<id property="memberId" column="MEMBER_ID"/>
			<association property="member" javaType="MemberManagementVO" autoMapping="true">
				<id property="memberId" column="MEMBER_ID"/>
			</association>
		</association>
	</resultMap>

	<resultMap type="GroupMemberVO" id="gmMap" autoMapping="true">
		<id property="groupId" column="GROUP_ID"/>
		<id property="memberId" column="MEMBER_ID"/>
		<association property="member" javaType="MemberManagementVO" autoMapping="true" />
		<collection property="projectMember" ofType="ProjectMemberVO" autoMapping="true">
			<id property="projectMemIdx" column="PROJECT_MEM_IDX"/>
		</collection>
	</resultMap>

	<select id="selectProjectMemberInsertList" resultMap="gmMap" parameterType="ProjectMemberVO">
		SELECT DISTINCT gm.*, mm.*
		FROM GROUP_MEMBER gm
		JOIN MEMBER_MANAGEMENT mm ON gm.MEMBER_ID = mm.MEMBER_ID
		WHERE gm.GROUP_ID = #{groupId}
		AND NOT EXISTS (
		    SELECT 1
		    FROM PROJECT_MEMBER pm
		    WHERE pm.MEMBER_ID = gm.MEMBER_ID
		    AND pm.GROUP_ID = gm.GROUP_ID
		    AND pm.PROJECT_ID = #{projectId}
		)
		ORDER BY mm.MEMBER_ID ASC
	</select>

	<select id="selectSearchMember" resultMap="gmMap" parameterType="map">
		SELECT DISTINCT gm.*, mm.*
		FROM GROUP_MEMBER gm
		JOIN MEMBER_MANAGEMENT mm ON gm.MEMBER_ID = mm.MEMBER_ID
		WHERE gm.GROUP_ID = #{groupId} AND mm.MEMBER_NAME LIKE '%' || #{searchName} || '%'
		AND NOT EXISTS (
		    SELECT 1
		    FROM PROJECT_MEMBER pm
		    WHERE pm.MEMBER_ID = gm.MEMBER_ID
		    AND pm.GROUP_ID = gm.GROUP_ID
		    AND pm.PROJECT_ID = #{projectId}
		)
		ORDER BY mm.MEMBER_ID ASC
	</select>

	<update id="updateProject" parameterType="ProjectVO">
		UPDATE PROJECT
		SET PROJECT_NAME = #{projectName}, PROJECT_DESCRIPTION = #{projectDescription}, PROJECT_END_DATE = #{projectEndDate}, PROJECT_PROFILE_IMG = #{projectProfileImg}, PROJECT_BUDGET = #{projectBudget}
		WHERE PROJECT_ID = #{projectId}
	</update>

	<update id="updateInsertProject" parameterType="ProjectVO">
		UPDATE PROJECT
		SET PROJECT_NAME = #{projectName}, PROJECT_DESCRIPTION = #{projectDescription}, PROJECT_END_DATE = #{projectEndDate,jdbcType=NUMERIC}, PROJECT_PROFILE_IMG = #{projectProfileImg}, PROJECT_BUDGET = #{projectBudget}, PROJECT_STATE = 'C'
		WHERE PROJECT_ID = #{projectId}
	</update>

	<update id="deleteProject" parameterType="string">
		UPDATE PROJECT
		SET PROJECT_DELYN = 'Y'
		WHERE PROJECT_ID = #{projectId}
	</update>



	<!-- 석준 추가 코드 -->
	<select id="AfterInsertProject" parameterType="String" resultMap="projectMap" >

		SELECT *
		FROM PROJECT
		WHERE PROJECT_ID = #{projectId}
	</select>


	<select id="participateMember" parameterType="String" resultType="MemberManagementVO">

SELECT
	mm.member_id,
    mm.member_name
FROM
    member_management mm
JOIN
    project_member pm ON mm.member_id = pm.member_id
JOIN
    project p ON pm.project_id = p.project_id
WHERE
    p.project_id = #{projectId}


	</select>




</mapper>